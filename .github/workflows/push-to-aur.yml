name: Push to AUR

on:
  workflow_run:
    workflows: ["Release Binary"]
    types:
      - completed

jobs:
  aur:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get latest release version
        run: |
          NEWVER=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name' | sed 's/^v//')
          echo "NEWVER=$NEWVER" >> $GITHUB_ENV

      - name: Set up SSH for AUR
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AUR_SSH_KEY }}" > ~/.ssh/aur
          chmod 600 ~/.ssh/aur
          ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts
          echo -e "Host aur.archlinux.org\n  Hostname aur.archlinux.org\n  IdentityFile ~/.ssh/aur\n  User aur\n  UserKnownHostsFile ~/.ssh/known_hosts\n  StrictHostKeyChecking=yes" >> ~/.ssh/config

      - name: Clone AUR repo
        run: git clone ssh://aur@aur.archlinux.org/mangaplace.git aur-repo

      - name: Download mangaplace binary
        working-directory: aur-repo
        run: |
          curl -L -o mangaplace \
            https://github.com/uttamkn/mangaplace/releases/download/v${{ env.NEWVER }}/mangaplace-${{ env.NEWVER }}.zip

      - name: Update PKGBUILD
        working-directory: aur-repo
        run: |
          sed -i "s/^pkgver=.*/pkgver=${NEWVER}/" PKGBUILD
          shasum=$(sha256sum mangaplace | cut -d ' ' -f1)
          sed -i "s/^sha256sums=.*/sha256sums=('${shasum}')/" PKGBUILD
        env:
          NEWVER: ${{ env.NEWVER }}

      - name: Generate .SRCINFO using Arch container
        working-directory: aur-repo
        run: |
          docker run --rm -v "$PWD:/pkgbuild" archlinux:base-devel bash -c "
            pacman -Sy --noconfirm git &&
            useradd -m builduser &&
            echo 'builduser ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers &&
            chown -R builduser:builduser /pkgbuild &&
            su builduser -c 'cd /pkgbuild && makepkg --printsrcinfo > .SRCINFO'"

      - name: Fix permissions after Docker
        run: sudo chown -R $USER:$USER aur-repo

      - name: Commit and push to AUR
        working-directory: aur-repo
        run: |
          git config user.name "CI Bot"
          git config user.email "ci@users.noreply.github.com"
          git add PKGBUILD .SRCINFO mangaplace
          git commit -m "release: v${NEWVER}" || echo "No changes to commit"
          git push
        env:
          NEWVER: ${{ env.NEWVER }}
